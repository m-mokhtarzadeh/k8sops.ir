<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Kubernetes Operations Documents</title><link>https://k8sops.ir/</link><description>Recent content in Home on Kubernetes Operations Documents</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 11 Dec 2022 15:26:15 +0000</lastBuildDate><atom:link href="https://k8sops.ir/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a simple Pod in Kubernetes</title><link>https://k8sops.ir/session6/simple_pod/</link><pubDate>Sat, 14 Jan 2023 16:37:00 +0000</pubDate><guid>https://k8sops.ir/session6/simple_pod/</guid><description> The following example is a simple manifest to create Pod.
apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: nginx You can create a file with .yml extension and paste the above yml manifest and use kubectl to create a simple Nginx Pod resource.
kubectl apply -f pod-example.yml You can also create the above resource directly from the site content.
kubectl apply -f https://k8sops.ir/session6/pod-example.yml</description></item><item><title>Exposing port from simple Pod in Kubernetes</title><link>https://k8sops.ir/session6/expose_port/</link><pubDate>Sat, 14 Jan 2023 16:36:00 +0000</pubDate><guid>https://k8sops.ir/session6/expose_port/</guid><description>The following example is a simple manifest to create Pod and expose port.
apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: nginx # Following lines were added ports: - name: http containerPort: 80 You can create a file with .yml extension and paste the above yml manifest and use kubectl to create a simple Nginx Pod resource.
kubectl apply -f expose-port-example.yml You can also create the above resource directly from the site content.</description></item><item><title>Explaining Pod manifest structure</title><link>https://k8sops.ir/session6/expain_pod_manifest/</link><pubDate>Sat, 14 Jan 2023 16:35:00 +0000</pubDate><guid>https://k8sops.ir/session6/expain_pod_manifest/</guid><description> Every Kubernetes resource manifest inlude following sections
apiVersion kind metadata spec You can see some example bellow.
Pod example:
apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: nginx Replicaset example:
apiVersion: apps/v1 kind: ReplicaSet metadata: name: nginx-deployment spec: replicas: 3 selector: matchLabels: app: nginx template: metadata: labels: app: nginx spec: containers: - name: nginx image: nginx:latest ports: - containerPort: 80</description></item><item><title>Checking Pod with liveness probe in Kubernetes</title><link>https://k8sops.ir/session6/liveness_probe/</link><pubDate>Sat, 14 Jan 2023 16:34:00 +0000</pubDate><guid>https://k8sops.ir/session6/liveness_probe/</guid><description>With liveness probe Kubernetes can check a container is still alive.
Following example is a HTTP Get liveness probe.
apiVersion: v1 kind: Pod metadata: name: app spec: containers: - name: app image: k8sops-pod-example ports: - containerPort: 80 # Following lines were added livenessProbe: httpGet: path: / port: 80 initialDelaySeconds: 15 Kubernetes can probe a container using one of the three mechanisms:
HTTP Get TCP Socket Exec initialDelaySeconds Kubernetes with this option will wait 15 seconds before executing the first probe.</description></item><item><title>Create Lab from scratch on oracle linux</title><link>https://k8sops.ir/session1/scratch/</link><pubDate>Sun, 11 Dec 2022 15:26:15 +0000</pubDate><guid>https://k8sops.ir/session1/scratch/</guid><description>Step 1: Download oracle linux 8 Download oracle linux 8 from following repository:
Oracle Linux download repository
Step 2: Install dependencies Install following dependencies:
dnf install -y iproute-tc vim Step 3: Disable firewall Disable firewall:
systemctl stop firewalld systemctl disable firewalld systemctl mask firewalld Step 4: Disable selinux Disable selinux:
sed -i s/^SELINUX=.*$/SELINUX=disabled/ /etc/selinux/config Step 5: Update system packages Update system packages with following command:
dnf update Step 6: Install latest version of docker Add docker repository to server package repository:</description></item><item><title>Create Lab from scratch on ubuntu 22.04</title><link>https://k8sops.ir/session1/scratch_ubuntu/</link><pubDate>Sun, 11 Dec 2022 15:26:15 +0000</pubDate><guid>https://k8sops.ir/session1/scratch_ubuntu/</guid><description>Step 1: Download ubuntu linux 22.04 Download ubuntu 22.04 from following repository:
Ubuntu Linux download repository
Step 2: Install dependencies Install following dependencies:
apt install apt install -y vim Step 3: Disable firewall Disable firewall:
ufw disable Step 4: Disable apparmor Disable apparmor:
systemctl stop apparmor systemctl disable apparmor systemctl mask apparmor Step 5: Update system packages Update system packages with following command:
apt update apt upgrade Install requirements with following command:</description></item><item><title>Create Lab with OVA file</title><link>https://k8sops.ir/session1/ova/</link><pubDate>Sun, 11 Dec 2022 15:26:15 +0000</pubDate><guid>https://k8sops.ir/session1/ova/</guid><description>Step 0: You need virtualbox installed on your system Donwload virutalbox from following link.
Virtualbox Download Page
Step 1: Download k8sops virtualbox ova Download ova file from following link.
Click Here to Go to Start Download</description></item><item><title>Create Lab with Vagrant</title><link>https://k8sops.ir/session1/vagrant/</link><pubDate>Sun, 11 Dec 2022 15:26:15 +0000</pubDate><guid>https://k8sops.ir/session1/vagrant/</guid><description>Step 0: You need virtualbox installed on your system Step 1: Download and install Vagrant You can download vagrant from hashicorp.
Click Here to Go to Download Page
Step 2: Download k8sops vagrant box Download box file from following link.
Click Here to Go to Start Download
Step 3: Import downloded box to box cache vagrant box add package.box --name oracle_kube Step 4(Optional): Verify box imported successfully vagrant box list Step 5: Create instance from box Create new empty folder for lab and create file with &amp;lsquo;Vagrant&amp;rsquo; name and insert following Content into it.</description></item></channel></rss>